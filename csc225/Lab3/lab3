.ORIG x3000
READLINE:		LEA R2, Buffer	; Loads the buffer address
			LD R3, Count	; Loads the counter for the loop
			LD R4, CRCode   ; Loads the end character 

	Loop
			TRAP x23        ; input a character
			STR R0, R2, #0  ; store to the buffer
			ADD R2, R2, #1 	; increment pointer
			
			TRAP x21

			ADD R0, R4, R0  ; check for CRCode 
			BRz ExitLoop    ; If  R4 + R0 = 0, CRCode is encountered, ExitLoop
					; convert character according to encode_after
			
			ADD R3, R3, #-1 ; decrement max string counter
			BRp Loop	; re runs input loop until max string



	ExitLoop			; restores Registers
			AND R0, R0, #0 	; clear R0
			STR R0, R2, #0	; store R0;
			HALT

CRCode 			.FILL #-10
Count 			.FILL #128
Buffer 			.BLKW 30

ENCODE_BEFORE: 
			.FILL 65 	; A 
 			.FILL 66 	; B 
 			.FILL 67 	; C
			.FILL 68	; D
 			.FILL 69 	; E
 			.FILL 70 	; F
 			.FILL 71 	; G
 			.FILL 72 	; H
 			.FILL 73 	; I
 			.FILL 74 	; J
 			.FILL 75 	; K
 			.FILL 76 	; L
 			.FILL 77 	; M
 			.FILL 78 	; N
 			.FILL 79 	; O
 			.FILL 80 	; P
 			.FILL 81 	; Q
 			.FILL 82 	; R
 			.FILL 83 	; S
 			.FILL 84 	; T
 			.FILL 85 	; U
 			.FILL 86 	; V
 			.FILL 87 	; W
 			.FILL 88 	; X
 			.FILL 89 	; Y
 			.FILL 90 	; Z
ENCODE_AFTER: 
			.FILL 90        ; Z 
 			.FILL 89        ; Y 
 			.FILL 88        ; X 
 			.FILL 87        ; W
 			.FILL 86        ; V
 			.FILL 85        ; U
 			.FILL 84        ; T
 			.FILL 83        ; S
 			.FILL 82        ; R
 			.FILL 81        ; Q
 			.FILL 80        ; P
 			.FILL 79        ; O
 			.FILL 78        ; N
 			.FILL 77        ; M
 			.FILL 76        ; L
 			.FILL 75        ; K
 			.FILL 74        ; J
 			.FILL 73        ; I
 			.FILL 72        ; H
 			.FILL 71        ; G
 			.FILL 70        ; F
 			.FILL 69        ; E
 			.FILL 68        ; D
 			.FILL 67        ; C
 			.FILL 66        ; B
 			.FILL 65        ; A
.END