/**
  *BasicArrayListTest
  *@author Bryan Sugiarto
  *@version Program2a
  */
public class BasicArrayListTest {
	
	 public static void testAll(){
		 testConstructor1();
		 testConstructor1();
		 testAddIndex();
		 testAdd();
		 testCapacity();
		 testClear();
		 testContains();
		 testGet();
		 testIndexOf();
		 testRemove();
		 testSet();
		 testTrimToSize();
	 }
	 
	 //1.BasicArrayList(): 1 test (2 calls to SUnit methods, 
	 //one to verify the size of the list and one to verify the capacity of the list).
	 public static void testConstructor1(){
		 
	 }
	 
	 //2.BasicArrayList(int capacity): 3 tests (6 calls to SUnit methods 
	 //- see details in default constructor).
	 public static void testConstructor2(){
		 
	 }
	 
	 //3.add(int index, Object o): 5 tests (8 calls to SUnit,
     //2 for exceptions, 6 for successful adds (get and size) at 3 well thoughtout locations).
	 public static void testAddIndex(){
		 
	 }

	 //4.add(Object o): 3 tests (6 calls to SUnit,
     //get and size after each add).
	 public static void testAdd(){
		 
	 }

	 //5.capacity(): 2 tests (4 calls to SUnit, the capacity 
	 //just before and just after at least two growth points).
	 public static void testCapacity(){
		 
	 }

	 //6.clear(): 2 tests (4 calls to SUnit, 
	 //the size and capacity in two different scenarios).
	 public static void testClear(){
		 
	 }

	 //7.contains(Object o): 2 tests (2 calls to SUnit,
     //a true and a false case).
	 public static void testContains(){
		 
	 }

	 //8.get(int index): 3 tests (5 calls to SUnit, 
     //2 for exceptions, 3 for successful gets).
	 public static void testGet(){
		 
	 }

	 //9.indexOf(Object o): 2 tests (2 calls to SUnit, 
	 //1 for an exception, 1 for a successful find).
	 public static void testIndexOf(){
		 
	 }

	 //10.remove(int index): 5 tests (8 calls to SUnit, 2 for exceptions, 
	 //		 6 for successful removes (get and size) at 3 well thoughtout locations).
	 public static void testRemove(){
		 
	 }
	 
	 //11.set(int index): 3 tests (8 calls to SUnit, 2 for exceptions, 
	 //6 for successful sets (get and size) at 3 well thoughtout locations).
	 public static void testSet(){
		 
	 }

	 
	 //(4 calls to SUnit, size and capacity in two different scenarios).
	 public static void testTrimToSize(){
		 BasicArrayList list = new BasicArrayList();
		 list.add("D");
		 list.add("asdf");
		 list.add("sdf");
		 list.trimToSize();	
		 SUnit.assertEquals(list.size(), 3);
		 SUnit.assertEquals(list.capacity(), 3);
		 
	 }


	public static void main(String[] args) {
		testAll();
		System.out.println("SUnit: "
                + SUnit.testsRun() + " tests run, "
                + SUnit.testsFailed() + " tests failed");

	}

}
